const mongoose = require("mongoose");

const TraitSchema = new mongoose.Schema({
  traitName: { type: String, default: "", required: true },
  traitType: { type: String, default: "", required: true },
  sourceCreature: { type: String, default: "", required: false },
  sourceBook: { type: String, default: "", required: false },
  traitDescription: { type: String, default: "", required: false },
  activation: { type: Number, default: 0, required: false },
  activationType: { type: String, default: "", required: false },
  activationCondition: { type: String, default: "", required: false },
  targetValue: { type: Number, default: 0, required: false },
  targetUnits: { type: String, default: "", required: false },
  targetType: { type: String, default: "", required: false },
  rangeNormal: { type: Number, default: 0, required: false },
  rangeMax: { type: Number, default: 0, required: false },
  rangeUnits: { type: String, default: "", required: false },
  durationValue: { type: Number, default: 0, required: false },
  durationUnits: { type: String, default: "", required: false },
  limitedUsesValue: { type: Number, default: 0, required: false },
  limitedUsesMax: { type: Number, default: 0, required: false },
  limitedUsesPer: { type: String, default: "", required: false },
  consumeType: { type: String, default: "", required: false },
  consumeAmount: { type: Number, default: 0, required: false },
  actionRechargeValue: { type: String, default: "", required: false },
  actionRechargeIsCharged: { type: Boolean, default: false, required: false },
  actionType: { type: String, default: "", required: false },
  abilityModifer: { type: String, default: "", required: false },
  damageTypeFormula: { type: String, default: "", required: false },
  damageType: { type: String, default: "", required: false },
  versatileDamage: { type: String, default: "", required: false },
  saveAbility: { type: String, default: "", required: false },
  saveDC: { type: Number, default: 0, required: false },
  saveScaling: { type: String, default: "", required: false },
  buff: { type: Boolean, default: false, required: false },
  conditions: { type: Boolean, default: false, required: false },
  damage: { type: Boolean, default: false, required: false },
  debuff: { type: Boolean, default: false, required: false },
  movement: { type: Boolean, default: false, required: false },
  utility: { type: Boolean, default: false, required: false },
  weaponType: { type: String, default: "", required: false },
  baseWeapon: { type: String, default: "", required: false },
  attunement: { type: String, default: "", required: false },
  proficient: { type: Boolean, default: false, required: false },
  equipped: { type: Boolean, default: false, required: false },
  damageStatus: { type: Boolean, default: false, required: false },
  weaponPropertiesAdamantine: { type: Boolean, default: false, required: false },
  weaponPropertiesAmmunition: { type: Boolean, default: false, required: false },
  weaponPropertiesFinesse: { type: Boolean, default: false, required: false },
  weaponPropertiesFirearm: { type: Boolean, default: false, required: false },
  weaponPropertiesFocus: { type: Boolean, default: false, required: false },
  weaponPropertiesHeavy: { type: Boolean, default: false, required: false },
  weaponPropertiesLight: { type: Boolean, default: false, required: false },
  weaponPropertiesLoading: { type: Boolean, default: false, required: false },
  weaponPropertiesMagical: { type: Boolean, default: false, required: false },
  weaponPropertiesReach: { type: Boolean, default: false, required: false },
  weaponPropertiesReload: { type: Boolean, default: false, required: false },
  weaponPropertiesReturning: { type: Boolean, default: false, required: false },
  weaponPropertiesSilvered: { type: Boolean, default: false, required: false },
  weaponPropertiesSpecial: { type: Boolean, default: false, required: false },
  weaponPropertiesThrown: { type: Boolean, default: false, required: false },
  weaponPropertiesTwoHanded: { type: Boolean, default: false, required: false },
  weaponPropertiesVersatile: { type: Boolean, default: false, required: false },
  user: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
});

module.exports = mongoose.model("Trait", TraitSchema);

/*


*/
